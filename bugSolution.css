Instead of using `calc(50% - 10px)`, consider using alternative methods such as:

1. **Using a JavaScript solution**: Calculate the width dynamically using JavaScript and apply it to the element's style. This provides the most control but requires additional JavaScript code. Example:
```javascript
const element = document.getElementById('myElement');
const viewportWidth = window.innerWidth;
element.style.width = `${viewportWidth * 0.5 - 10}px`;
```
2. **Adjusting the parent container**: If possible, modify the parent container's dimensions or properties to indirectly achieve the desired width for the child element, reducing the need for complex `calc()` expressions. Example: If the parent is `100%` width you may adjust its width instead, if that works for your design. 
3. **Using media queries**: If the layout discrepancies are browser-specific or dependent on screen size, use media queries to define different styles for different conditions. 
4. **Using grid or flexbox:**  These layout systems often allow for more flexible and robust layouts reducing the reliance on precise `calc()` calculations. This method would usually be a better design decision for more complex layouts.
Choose the solution that best fits your project's needs and complexity.